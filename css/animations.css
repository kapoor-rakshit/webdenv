/* Reference : https://www.w3schools.com/css/css3_animations.asp */

/* A transition is an animation, just one that is performed between two distinct states - i.e. a start state and an end state.
   Transitions define a default animation that should be performed every time the specified property has changed.
   Animation does not specifically involve a start state and an end state, 
   or if you need more fine grain control over the keyframes in a transition, then you've got to use an animation.
*/

/* To use CSS animation, specify some keyframes rules for the animation.
Keyframes hold what styles the element will have at certain times. 

In "@keyframes" rule, the animation will gradually change from the current style to the new style at certain times.
To get an animation to work on element, bind the animation-name or -webkit-animation-name to that element.*/

div#hoverchange{
    width: 100px;
    height: 100px;
    background-color: red;

    -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
    -webkit-animation-delay : 0s;
    -webkit-animation-iteration-count: infinite; /* Safari 4.0 - 8.0 */
    -webkit-animation-direction: alternate-reverse;
    -webkit-animation-timing-function: linear;
    -webkit-animation-fill-mode: forwards;
    -webkit-animation-play-state: paused;

    animation-duration: 4s;
    animation-delay: 0s;   /* using negative values, the animation will start as if it had already been playing for N seconds.*/
    animation-iteration-count: 1;  /*specifies the number of times an animation should run before it stops, can be "infinite" */
    animation-direction: normal; 
      /* specifies whether an animation should be played forwards, backwards or in alternate cycles.
                                normal (forward), reverse, alternate, alternate-reverse */
    animation-timing-function: linear;  /*ease (default), linear, ease-in, ease-out, ease-in-out*/
    animation-fill-mode: forwards;
      /* retain effect of anim. none (defalt), Animation will not apply any styles to the element before or after it is executing
	                        forwards, retain the style values that is set by the last keyframe (depends on animation-direction and animation-iteration-count)
	                        backwards, get style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period
	                        both, get values set by first keyframe before animation starts, and retain values from last keyframe when animation ends */
    animation-play-state: paused;       /* specifies whether the animation is    paused | running | initial */
}

#hoverchange:hover{
	-webkit-animation-name: example; 
                                         /* this will select hoverchange id tag itself, on hover */
	animation-name: example;        
}

#hoverchange:hover > #animateddiv {
	-webkit-animation-name: example;
                                           /* this will select animateddiv id tag whose parent is hoverchange id tag, on hover  */
	animation-name: example;        
}

/* Safari 4.0 - 8.0 */
@-webkit-keyframes example {
    0%   {background-color:red; transform: rotate(36deg);}
    25%  {background-color:yellow; transform: rotate(72deg);}
    50%  {background-color:blue; transform: rotate(108deg);}
    75%  {background-color:green; transform: rotate(144deg);}
    100% {background-color:pink; transform: rotate(180deg);}
}

/* Standard syntax */
@keyframes example {
    0%   {background-color:red; transform: rotate(36deg);}
    25%  {background-color:yellow; transform: rotate(72deg);}
    50%  {background-color:blue; transform: rotate(108deg);}
    75%  {background-color:green; transform: rotate(144deg);}
    100% {background-color:pink; transform: rotate(180deg);}
}
